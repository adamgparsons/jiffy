{"ast":null,"code":"import _objectSpread from \"/Users/adam/Documents/jiffy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/adam/Documents/jiffy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adam/Documents/jiffy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adam/Documents/jiffy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adam/Documents/jiffy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adam/Documents/jiffy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adam/Documents/jiffy/src/App.js\";\nimport React, { Component } from 'react'; // Importing the spinner and assinging it to the variable loader\n\nimport loader from \"./images/loader.svg\";\n\nvar Header = function Header() {\n  return React.createElement(\"div\", {\n    className: \"header grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Jiffy\"));\n};\n\nvar UserHint = function UserHint(_ref) {\n  var loading = _ref.loading,\n      hintText = _ref.hintText;\n  return React.createElement(\"div\", {\n    className: \"user-hint\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, loading ? React.createElement(\"img\", {\n    className: \"block mx-auto\",\n    src: loader,\n    alt: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : hintText);\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState(function (prevState, props) {\n        return _objectSpread({}, prevState, {\n          // and then we overwrite the ones we want after\n          searchTerm: value\n        });\n      });\n\n      console.log(event.key);\n      var value = event.target.value;\n      console.log(value);\n\n      if (value.length > 2) {}\n    };\n\n    _this.handleKeyPress = function (event) {\n      var value = event.target.value;\n\n      if (value.length > 2 && event.key === 'Enter') {\n        alert(\"search for \".concat(value));\n      }\n    };\n\n    _this.state = {\n      searchTerm: '',\n      hintText: 'Hit enter to search'\n    };\n    return _this;\n  } // with create react app we can write our methods\n  // as arrow functions, meaning we don't need the constructor and bind\n\n\n  _createClass(App, [{\n    key: \"render\",\n    //when we have two or more chars in the search box and we also press enter\n    // we want to run a search\n    value: function render() {\n      var searchTerm = this.state.searchTerm;\n      return React.createElement(\"div\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input grid-item\",\n        placeholder: \"Type something\",\n        onChange: this.handleChange,\n        onKeyPress: this.handleKeyPress,\n        value: searchTerm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(UserHint, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/adam/Documents/jiffy/src/App.js"],"names":["React","Component","Header","UserHint","loading","hintText","loader","App","props","handleChange","event","setState","prevState","searchTerm","value","console","log","key","target","length","handleKeyPress","alert","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SACb;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADa;AAAA,CAAf;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,QAAZ,QAAYA,QAAZ;AAAA,SACf;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,OAAO,GAAG;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEE,MAApC;AAA4C,IAAA,GAAG,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACND,QAHJ,CADe;AAAA,CAAjB;;IAQME,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAUnBC,YAVmB,GAUJ,UAAAC,KAAK,EAAI;AACtB,YAAKC,QAAL,CAAc,UAACC,SAAD,EAAYJ,KAAZ;AAAA,iCAETI,SAFS;AAGZ;AACAC,UAAAA,UAAU,EAAEC;AAJA;AAAA,OAAd;;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,GAAlB;AAPsB,UASdH,KATc,GASJJ,KAAK,CAACQ,MATF,CASdJ,KATc;AAUtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,UAAIA,KAAK,CAACK,MAAN,GAAe,CAAnB,EAAsB,CACrB;AACF,KAvBkB;;AAAA,UAyBnBC,cAzBmB,GAyBF,UAAAV,KAAK,EAAI;AAAA,UAChBI,KADgB,GACNJ,KAAK,CAACQ,MADA,CAChBJ,KADgB;;AAExB,UAAIA,KAAK,CAACK,MAAN,GAAe,CAAf,IAAoBT,KAAK,CAACO,GAAN,KAAc,OAAtC,EAA+C;AAC7CI,QAAAA,KAAK,sBAAeP,KAAf,EAAL;AACD;AACF,KA9BkB;;AAEjB,UAAKQ,KAAL,GAAa;AACXT,MAAAA,UAAU,EAAE,EADD;AAEXR,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFiB;AAMlB,G,CAED;AACA;;;;;AAuBA;AACA;6BAES;AAAA,UACCQ,UADD,GACgB,KAAKS,KADrB,CACCT,UADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,QAAQ,EAAE,KAAKJ,YAHjB;AAIE,QAAA,UAAU,EAAE,KAAKW,cAJnB;AAKE,QAAA,KAAK,EAAEP,UALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,EAaE,oBAAC,QAAD,oBAAc,KAAKS,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,CADF;AAiBD;;;;EAxDerB,S;;AA2DlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\n// Importing the spinner and assinging it to the variable loader\nimport loader from './images/loader.svg';\n\nconst Header = () => (\n  <div className='header grid'>\n    <h1 className=\"title\">Jiffy</h1>\n  </div>\n)\n\nconst UserHint = ({ loading, hintText }) => (\n  <div className='user-hint'>\n    {/* Determine if item is loading show spinner if not show the hint text */}\n    {loading ? <img className=\"block mx-auto\" src={loader} alt=\"loading\" /> :\n      hintText}\n  </div>\n)\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchTerm: '',\n      hintText: 'Hit enter to search'\n    };\n  }\n\n  // with create react app we can write our methods\n  // as arrow functions, meaning we don't need the constructor and bind\n  handleChange = event => {\n    this.setState((prevState, props) => ({\n      // we take our old props and spread them out here\n      ...prevState,\n      // and then we overwrite the ones we want after\n      searchTerm: value\n    }))\n    console.log(event.key)\n\n    const { value } = event.target;\n    console.log(value);\n    if (value.length > 2) {\n    }\n  };\n\n  handleKeyPress = event => {\n    const { value } = event.target\n    if (value.length > 2 && event.key === 'Enter') {\n      alert(`search for ${value}`);\n    }\n  };\n\n  //when we have two or more chars in the search box and we also press enter\n  // we want to run a search\n\n  render() {\n    const { searchTerm } = this.state\n    return (\n      <div className=\"page\" >\n        <Header />\n        <div className='search grid'>\n          {/* {our stack of gif images} */}\n          <input\n            className='input grid-item'\n            placeholder='Type something'\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n            value={searchTerm}\n          />\n        </div>\n\n        <UserHint {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}